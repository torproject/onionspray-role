---
#
# Certificate handling
#
# Copyright (C) 2024 The Tor Project, Inc.
# SPDX-License-Identifier: AGPL-3.0-or-later
#

- name: certs | Certificate configuration
  tags:
    - certificates
  block:
    - name: certs | Check if CA certificate file exists
      ansible.builtin.stat:
        path: "{{ onionspray_ca_file }}"
      register: _ca_file
      when: onionspray_check_cert_with_ca_file

    - name: certs | Abort if CA certificate file is absent
      ansible.builtin.fail:
        msg: |
          No file present at path '{{ onionspray_ca_file }}'.
          This file should contain the CA certificate(s) used to check if the TLS certificate of the proxied domain is valid.
          On Debian-like systems, you can install the 'ca-certificates' package to create the CA file used by default.
          Otherwise, change the 'onionspray_ca_file' variable to the path of CA certificate(s) you want to use.
          You can also disable this check (not recommended) by setting 'onionspray_check_cert_with_ca_file' to 'false'.
      when:
        - onionspray_check_cert_with_ca_file
        - not _ca_file.stat.exists

    - name: certs | Generate self-signed certificate script
      ansible.builtin.template:
        src: make-selfsigned-wildcard-ssl-cert.sh.j2
        dest: "{{ onionspray_repo_download_path }}/lib/make-selfsigned-wildcard-ssl-cert.sh"
        owner: "{{ onionspray_user }}"
        group: "{{ onionspray_user }}"
        mode: "700"
      notify:
        - Remove Onionspray generated settings config files
        - Remove Onionspray generated project directories
        - Generate Onionspray configs
        - Restart Onionspray

    - name: certs | Create the project certs folder
      ansible.builtin.file:
        path    : "{{ onionspray_repo_download_path }}/projects/{{ settings.project_name }}/ssl"
        owner   : "{{ onionspray_user }}"
        group   : "{{ onionspray_user }}"
        state   : directory
        mode    : '0700'
        recurse : false
