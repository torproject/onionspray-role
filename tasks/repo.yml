---
#
# Repository management
#
# Copyright (C) 2025 The Tor Project, Inc.
# SPDX-License-Identifier: AGPL-3.0-or-later
#

- name: repo | Onionspray repository management
  block:
    - name: repo | Install git
      ansible.builtin.package:
        name: git

    # Note that Git is able to clone to an empty folder, so there's no harm
    # in creating this folder in the first run when the repository is still not
    # cloned.
    #
    # This folder needs to be managed beforehand, to make sure the Onionspray
    # user can write in to it in cases it's located in systemd-wide folders
    # like /var/lib.
    - name: repo | Create the onionspray repository folder
      ansible.builtin.file:
        path    : "{{ onionspray_path }}"
        owner   : "{{ onionspray_user }}"
        group   : "{{ onionspray_group }}"
        state   : directory
        mode    : '0750'
        recurse : false

    - name: repo | Manage the Onionpspray Git repository
      ansible.builtin.git:
        repo: "{{ onionspray_repo }}"
        dest: "{{ onionspray_path }}"
        version: "{{ onionspray_repository_version }}"
      become: true
      become_user: "{{ onionspray_user }}"
      register: onionspray_git_repo_state
      # Workaround allowing to run Git even if the shell is set to /sbin/nologin
      # Discussed at https://stackoverflow.com/questions/50512402/can-ansible-use-sudo-su-if-the-sudo-user-is-not-allowed-to-run-arbitrary-scr
      # Alternative: https://docs.ansible.com/ansible/latest/collections/community/general/sudosu_become.html
      become_method: "ansible.builtin.sudo"
      become_flags: "su -s /bin/bash - {{ onionspray_user }} /bin/bash -c"
      #when: not _onionspray_local_repo.stat.exists or _onionspray_get_repo_revision.stdout | default('') != onionspray_repository_version | default('')
