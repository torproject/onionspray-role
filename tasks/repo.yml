---
#
# Repository management
#
# Copyright (C) 2024 The Tor Project, Inc.
# SPDX-License-Identifier: AGPL-3.0-or-later
#

- name: repo | Onionspray repository management
  block:
    # Note that Git is able to clone to an empty folder, so there's no harm
    # in creating this folder in the first run when the repository is still not
    # cloned.
    #
    # This folder needs to be managed beforehand, to make sure the Onionspray
    # user can write in to it in cases it's located in systemd-wide folders
    # like /var/lib.
    - name: repo | Create the onionspray repository folder
      ansible.builtin.file:
        path    : "{{ onionspray_path }}"
        owner   : "{{ onionspray_user }}"
        group   : "{{ onionspray_user }}"
        state   : directory
        mode    : '0750'
        recurse : false

    #- name: repo | Check if Onionspray repository has already been cloned
    #  ansible.builtin.stat:
    #    dest: "{{ onionspray_path }}/.git"
    #  register: _onionspray_local_repo

    #- name: repo | Get local Onionspray revision if a custom revision is specified
    #  ansible.builtin.command:
    #    cmd: "git rev-parse HEAD"
    #    chdir: "{{ onionspray_path }}"
    #  become: true
    #  become_user: "{{ onionspray_user }}"
    #  register: _onionspray_get_repo_revision
    #  changed_when: false
    #  when:
    #    - _onionspray_local_repo.stat.exists
    #    - onionspray_repository_version is defined

    - name: repo | Manage the Onionpspray Git repository
      ansible.builtin.git:
        repo: "{{ onionspray_repo }}"
        dest: "{{ onionspray_path }}"
        version: "{{ onionspray_repository_version }}"
        force: true
      become: true
      become_user: "{{ onionspray_user }}"
      become_flags: '-s /bin/sh'
      #when: not _onionspray_local_repo.stat.exists or _onionspray_get_repo_revision.stdout | default('') != onionspray_repository_version | default('')
