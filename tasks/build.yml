---
#
# Builds Onionspray
#
# Copyright (C) 2024 The Tor Project, Inc.
# SPDX-License-Identifier: AGPL-3.0-or-later
#

- name: build | Handle Onionspray dependencies
  block:
    - name: build | Determine which dependency resolution script to use depending on host's distro and version
      ansible.builtin.set_fact:
        # yamllint disable-line rule:line-length
        _onionspray_deps_script_name: "{{ onionspray_deps_script_name | default('deps-{{ ansible_distribution | lower }}-{{ ansible_distribution_release | lower }}.sh') }}"

    - name: build | Install Onionspray build dependencies
      ansible.builtin.command:
        # yamllint disable-line rule:line-length
        cmd: "{{ onionspray_path }}/opt/{{ _onionspray_deps_script_name }} | tee {{ onionspray_path }}/log/deps-{{ ansible_date_time.epoch }}.log"
      become: true
      changed_when: true

- name: build | Handle Onionspray build
  block:
    - name: build | Check if Onionspray has already been built
      ansible.builtin.stat:
        dest: "{{ onionspray_build_lock_file }}"
      register: _onionspray_check_has_been_built

    #- name: build | Add temporary sudoers file without password for Onionspray user
    #  ansible.builtin.copy:
    #    content: "onionspray ALL=(ALL) NOPASSWD: ALL"
    #    dest: /etc/sudoers.d/onionspray
    #    owner: root
    #    group: root
    #    mode: "600"
    #  when: not _onionspray_check_has_been_built.stat.exists

    - name: build | Determine which build script to use depending on host's distro and version
      ansible.builtin.set_fact:
        # yamllint disable-line rule:line-length
        _onionspray_compile_script_name: "{{ onionspray_compile_script_name | default('compile-{{ ansible_distribution | lower }}-{{ ansible_distribution_release | lower }}.sh') }}"
      when:
        - not _onionspray_check_has_been_built.stat.exists

    - name: build | Build Onionspray
      ansible.builtin.command:
        # yamllint disable-line rule:line-length
        cmd: "{{ onionspray_path }}/opt/{{ _onionspray_compile_script_name }} | tee {{ onionspray_path }}/log/compile-{{ ansible_date_time.epoch }}.log"
      become: true
      become_user: "{{ onionspray_user }}"
      # Workaround allowing to run Git even if the shell is set to /sbin/nologin
      # Discussed at https://stackoverflow.com/questions/50512402/can-ansible-use-sudo-su-if-the-sudo-user-is-not-allowed-to-run-arbitrary-scr
      # Alternative: https://docs.ansible.com/ansible/latest/collections/community/general/sudosu_become.html
      become_method: "ansible.builtin.sudo"
      become_flags: "su -s /bin/bash - {{ onionspray_user }} /bin/bash -c"
      changed_when: true
      when: not _onionspray_check_has_been_built.stat.exists

    #- name: build | Remove temporary Onionspray sudoers file
    #  ansible.builtin.file:
    #    path: /etc/sudoers.d/onionspray
    #    state: absent

    - name: build | Create file to indicate that Onionspray has been built
      ansible.builtin.copy:
        content: "Onionspray is already built. Remove this file to prompt rebuild at next Ansible run."
        dest: "{{ onionspray_build_lock_file }}"
        owner: "{{ onionspray_user }}"
        group: "{{ onionspray_user }}"
        mode: "600"
