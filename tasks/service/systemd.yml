---
#
# Service management using systemd
#
# Copyright (C) 2025 The Tor Project, Inc.
# SPDX-License-Identifier: AGPL-3.0-or-later
#

- name: service | systemd | Check if Onionspray init script exists
  ansible.builtin.stat:
    dest: "{{ onionspray_path }}/onionspray-init.sh"
  register: _onionspray_init_script

- name: service | systemd | Generate Onionspray scripts (init wrapper, and housekeeping i.e. log rotation)
  ansible.builtin.command:
    cmd: "{{ onionspray_path }}/onionspray script"
  become: true
  become_user: "{{ onionspray_user }}"
  # Workaround allowing to run Git even if the shell is set to /sbin/nologin
  # Discussed at https://stackoverflow.com/questions/50512402/can-ansible-use-sudo-su-if-the-sudo-user-is-not-allowed-to-run-arbitrary-scr
  # Alternative: https://docs.ansible.com/ansible/latest/collections/community/general/sudosu_become.html
  become_method: "ansible.builtin.sudo"
  become_flags: "su -s /bin/bash - {{ onionspray_user }} /bin/bash -c"
  changed_when: true
  when: not _onionspray_init_script.stat.exists

- name: service | systemd | Create Onionspray systemd service
  ansible.builtin.template:
    src: service/systemd.j2
    dest: /etc/systemd/system/onionspray.service
    owner: root
    group: root
    mode: "644"
  notify:
    - Reload systemctl daemon
    - Restart Onionspray

- name: service | systemd | Flush handlers to generate Onionspray configs if needed
  ansible.builtin.meta: flush_handlers

- name: service | systemd | Ensure Onionspray systemd service is enabled and started
  ansible.builtin.service:
    name: onionspray.service
    state: started
    enabled: true
  when: onionspray_use_systemd
